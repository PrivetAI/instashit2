version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: instagram_scraper_db_dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: instagram_scraper
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Application в режиме разработки
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: instagram_scraper_app_dev
    restart: unless-stopped
    ports:
      - "5000:5000"  # Express server
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/instagram_scraper
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - CHROME_DEBUG_PORT=9222
      - CHROME_DEBUG_HOST=host.docker.internal  # Connect to host Chrome
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      # Монтируем исходный код для hot reload
      - ./client:/app/client
      - ./server:/app/server
      - ./shared:/app/shared
      - ./uploads:/app/uploads
      # Исключаем node_modules
      - /app/node_modules
    extra_hosts:
      - "host.docker.internal:host-gateway"  # Enable host access from container
    stdin_open: true
    tty: true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data_dev:
    driver: local

networks:
  default:
    name: instagram_scraper_dev_network